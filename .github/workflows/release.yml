# brian's standard GitHub Actions release config for Perl 5 modules
# version 20220125.002
# https://github.com/briandfoy/github_actions
# https://github.com/features/actions
# This file is licensed under the Artistic License 2.0
name: release

on:
    push:
        tags:
            - 'release-*'
jobs:
    release:
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@v2
# Don't release if the signature for the database is bad
            - name: setup GPG
              run: |
                sudo apt-get update
                sudo apt-get -y install gnupg
                gpg --keyserver keys.openpgp.org --recv-keys 75AAB42CBA0D7F37F0D6886DF83F8D5E878B6041 867D53B08E433DF401A06EF49A9C0FE7F64876BF
            - uses: actions/checkout@v3
            - name: Check DB
              run: |
                gpg --verify lib/CPAN/Audit/DB.pm.gpg lib/CPAN/Audit/DB.pm
# Some older versions of Perl have trouble with hostnames in certs. I
# haven't figured out why.
            - name: Setup environment
              run: |
                echo "PERL_LWP_SSL_VERIFY_HOSTNAME=0" >> $GITHUB_ENV
# I had some problems with openssl on Ubuntu, so I punted by installing
# cpanm first, which is easy. I can install IO::Socket::SSL with that,
# then switch back to cpan. I didn't explore this further, but what you
# see here hasn't caused problems for me.
# Need HTTP::Tiny 0.055 or later.
            - name: Install cpanm and multiple modules
              run: |
                curl -L https://cpanmin.us | sudo perl - App::cpanminus
                cpanm --notest IO::Socket::SSL App::Cpan HTTP::Tiny ExtUtils::MakeMaker Test::Manifest
# Install the dependencies, again not testing them. This installs the
# module in the current directory, so we end up installing the module,
# but that's not a big deal.
            - name: Install dependencies
              run: |
                sudo cpan -M https://www.cpan.org -T .
                sudo make clean
            - name: Create distro
              run: |
                perl Makefile.PL
                make disttest
                make dist 2>/dev/null | grep Created | awk '{ print "ASSET_NAME=" $2 }' >> $GITHUB_ENV
            - name: version
              run: echo "::set-output name=version::$(perl -le 'print $ARGV[0] =~ m/(.*?).tar.gz/' *.tar.gz)"
              id: version
            - name: release
              uses: actions/create-release@v1
              id: create_release
              env:
                GITHUB_TOKEN: ${{ github.token }}
              with:
                draft: false
                prerelease: false
                release_name: ${{ steps.version.outputs.version }}
                tag_name: ${{ github.ref }}
                body_path: Changes
            - name: upload
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ github.token }}
              with:
                upload_url: ${{ steps.create_release.outputs.upload_url }}
                asset_path: ${{ env.ASSET_NAME }}
                asset_name: ${{ env.ASSET_NAME }}
                asset_content_type: application/gzip
